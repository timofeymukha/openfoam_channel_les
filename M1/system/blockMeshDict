/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 | 
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           | 
|  \\    /   O peration     | Version:  2.2.0                                 | 
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      | 
|    \\/     M anipulation  |                                                 | 
\*---------------------------------------------------------------------------*/ 
FoamFile 
 {
	 version	 2.0;
 	 format	 ascii;
	 class	 dictionary;
	 object	 blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * // 

scale 1; 

fastMerge 1;

vertices
(
    (0 0 0)
    (8.0 0 0)
    (8.0 0.00712 0)
    (0 0.00712 0)
    (8 0.295033 0)
    (0 0.295033 0)
    (8.0 1 0)
    (0 1 0)
    (8.00 1.70497 0)
    (0 1.70497 0)
    (8.00 1.99288 0)
    (0 1.99288 0)
    (8.00 2 0)
    (0 2 0)
    (0 0 6.00)
    (8.0 0 6.00)
    (8.0 0.00712 6.0)
    (0 0.00712 6.00)
    (8.00 0.295033 6.00)
    (0 0.295033 6.0)
    (8.00 1 6.0)
    (0 1 6.00)
    (8.00 1.70497 6.00)
    (0 1.70497 6.0)
    (8.00 1.99288 6.00)
    (0 1.99288 6.00)
    (8.00 2 6.0)
    (0 2 6.0)
);

blocks
(
    hex (0 1 2 3 14 15 16 17)     (200 8 250) SimpleGrading (1 1 1) 
    hex (3 2 4 5 17 16 18 19)     (200 32 250) SimpleGrading (1 35.888 1) 
    hex (5 4 6 7 19 18 20 21)     (200 18 250) SimpleGrading (1 1 1) 
    hex (7 6 8 9 21 20 22 23)     (200 18 250) SimpleGrading (1 1 1) 
    hex (9 8 10 11 23 22 24 25)   (200 32 250) SimpleGrading (1 0.027864 1) 
    hex (11 10 12 13 25 24 26 27) (200 8 250) SimpleGrading (1 1 1) 
);

edges
(
);

boundary
(
   inlet
   {
       type cyclic;
       neighbourPatch   outlet;
       faces
       (
            (0 3 17 14)
            (3 5 19 17)
            (5 7 21 19)
            (7 9 23 21)
            (9 11 25 23)
            (11 13 27 25)
       );
   }
   outlet
   {
       type cyclic;
       neighbourPatch   inlet;
       faces
       (
            (2 1 15 16)
            (4 2 16 18)
            (6 4 18 20)
            (8 6 20 22)
            (10 8 22 24)
            (12 10 24 26)
       );
   }
   bottomWall
   {
       type wall;
       faces
       (
            (1 0 14 15)
       );
   }
   topWall
   {
       type wall;
       faces
       (
            (13 12 26 27)
       );
   }
   left
   {
       type cyclic;
       neighbourPatch   right;
       faces
       (
            (0 1 2 3)
            (3 2 4 5)
            (5 4 6 7)
            (7 6 8 9)
            (9 8 10 11)
            (11 10 12 13)
       );
   }
   right
   {
       type cyclic;
       neighbourPatch   left;
       faces
       (
            (14 15 16 17)
            (17 16 18 19)
            (19 18 20 21)
            (21 20 22 23)
            (23 22 24 25)
            (25 24 26 27)
       );
   }
);

mergePatchPairs
(
);

// ************************************************************************* //
